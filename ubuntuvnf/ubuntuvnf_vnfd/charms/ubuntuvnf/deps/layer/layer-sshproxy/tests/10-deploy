#!/usr/bin/python3

import amulet
import requests
import unittest
import string
import random


class TestCharm(unittest.TestCase):
    user = None
    passwd = None

    def id_generator(self, size=6, chars=string.ascii_uppercase + string.digits):
        return ''.join(random.choice(chars) for _ in range(size))

    def setUp(self):

        # Setup random user/password
        self.user = self.id_generator()
        self.passwd = self.id_generator()

        self.d = amulet.Deployment()

        self.d.add('sshproxy')
        self.d.add('ubuntu')

        self.d.expose('sshproxy')

        self.d.setup(timeout=900)
        self.d.sentry.wait()

        # Add
        ubuntu_0 = d.sentry['ubuntu'][0]
        ubuntu_0.ssh("sudo adduser {}".format(self.user))
        ubuntu_0.ssh("echo '{}' | sudo passwd {} --stdin".format(self.passwd, self.user))

        self.unit = self.d.sentry['sshproxy'][0]

    def test_service(self):

        # Configure the unit

        # Run a command

        # Verify the output

        # test we can access over http
        # page = requests.get('http://{}'.format(self.unit.info['public-address']))
        # self.assertEqual(page.status_code, 200)
        # Now you can use self.d.sentry[SERVICE][UNIT] to address each of the units and perform
        # more in-depth steps. Each self.d.sentry[SERVICE][UNIT] has the following methods:
        # - .info - An array of the information of that unit from Juju
        # - .file(PATH) - Get the details of a file on that unit
        # - .file_contents(PATH) - Get plain text output of PATH file from that unit
        # - .directory(PATH) - Get details of directory
        # - .directory_contents(PATH) - List files and folders in PATH on that unit
        # - .relation(relation, service:rel) - Get relation data from return service
        pass
